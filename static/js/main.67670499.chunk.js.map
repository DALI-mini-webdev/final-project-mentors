{"version":3,"sources":["logo.svg","components/DogPosting.js","components/DogBoard.js","firebase/index.js","components/ToDoPosting.js","components/ToDoBoard.js","App.js","reportWebVitals.js","index.js"],"names":["DogPosting","props","deletePosting","console","log","delete","id","editPosting","setState","editing","changeNewTitle","event","updatedDogName","target","value","update","state","editOptions","this","onChange","onClick","name","breed","src","dogURL","alt","Component","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","ToDoPost","deletePost","className","title","task","ToDoBoard","newTitleFunction","newTaskFunction","saveNewToDo","collection","add","then","ref","catch","e","fetchToDos","todoList","get","query","forEach","doc","data","push","allToDos","allPosts","map","todo","type","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67670499.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\n\nclass DogPosting extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editing: false,\n      updatedDogName: '',\n    };\n  }\n\n  deletePosting = () => {\n    console.log('deleted!');\n    this.props.delete(this.props.id);\n  }\n\n  editPosting = () => {\n    console.log('Editing!');\n    this.setState({\n      editing: true\n    });\n  }\n\n  changeNewTitle = (event) => {\n    this.setState({\n      updatedDogName: event.target.value\n    });\n  }\n\n  update = () => {\n    this.props.update(this.props.id, this.state.updatedDogName);\n    this.setState({\n      editing: false,\n    });\n  }\n\n  render() {\n    let editOptions = null;\n    if(this.state.editing) {\n      editOptions = (\n        <div>\n          <input value={this.state.updatedDogName} onChange={this.changeNewTitle} />\n          <button onClick={this.update}>Update!</button>\n        </div>\n      );\n    }\n    else {\n      editOptions = (\n        <button onClick={this.editPosting} >Edit!</button>\n      );\n    }\n\n    return (\n      <div>\n        <p>{this.props.name}, {this.props.breed}</p>\n        <img src={ this.props.dogURL } alt='Image'/>\n        <button onClick={this.deletePosting} >Delete!</button>\n        {editOptions}\n      </div>\n    )\n  }\n}\n\n// const DogPosting = (props) => {\n//   return (\n//     <div>\n//       <p>{props.name}, {props.breed}</p>\n//       <img src={ props.dogURL } alt='Image'/>\n//     </div>\n//   );\n// }\n\nexport default DogPosting;\n","import React, { Component } from 'react';\nimport { Map } from 'immutable';\nimport DogPosting from './DogPosting';\n\nclass DogBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dogs: Map(),\n      dogID: 0,\n      newDogName: '',\n      newDogBreed: '',\n      newDogImage: ''\n    }\n  }\n  newDogNameFunction = (event) => {\n    this.setState({ newDogName: event.target.value });\n  }\n  newDogBreedFunction = (event) => {\n    this.setState({ newDogBreed: event.target.value });\n  }\n  newDogImageFunction = (event) => {\n    this.setState({ newDogImage: event.target.value });\n  }\n\n  saveDogInfo = () => {\n    let dogData = {\n      name: this.state.newDogName,\n      breed: this.state.newDogBreed,\n      image: this.state.newDogImage,\n    }\n\n    this.setState({\n      dogs: this.state.dogs.set(this.state.dogID, dogData),\n      dogID: this.state.dogID + 1,\n    });\n  }\n\n  deleteDogInfo = (id) => {\n    this.setState({\n      dogs: this.state.dogs.delete(id),\n    });\n  }\n\n  updateDogName = (id, field) => {\n    this.setState({\n      dogs: this.state.dogs.update(id, (n) => {\n        return Object.assign({}, n, field);\n      })\n    });\n  }\n  \n  render() {\n    const allDogs = this.state.dogs.entrySeq().map(\n      ([id, dog]) => {\n        return (\n          <DogPosting\n            name={dog.name}\n            breed={dog.breed}\n            dogURL={dog.image}\n            id={id}\n            key={id}\n            delete={this.deleteDogInfo}\n            update={this.updateDogName}\n          />\n        );\n      }\n    );\n    return (\n      <div>\n        <p> this is the dog board </p>\n        {allDogs}\n        <p>Add a dog!</p>\n\n        <p>Enter Name:</p>\n        <input type=\"text\" value={this.state.newDogName} onChange={this.newDogNameFunction} />\n\n        <p>Enter Breed:</p>\n        <input type=\"text\" value={this.state.newDogBreed} onChange={this.newDogBreedFunction} />\n\n        <p>Enter Image URL:</p>\n        <input type=\"text\" value={this.state.newDogImage} onChange={this.newDogImageFunction} />\n        <button onClick={this.saveDogInfo}>Save!</button>\n        \n      </div>\n    );\n  }\n}\n\nexport default DogBoard;\n","import firebase from 'firebase';\nimport 'firebase/firestore';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCDfenOYKUDU6HVN5AucetT16W0EKZ1yTE\",\n  authDomain: \"example-8e7d6.firebaseapp.com\",\n  projectId: \"example-8e7d6\",\n  storageBucket: \"example-8e7d6.appspot.com\",\n  messagingSenderId: \"635941725426\",\n  appId: \"1:635941725426:web:7e489c79b86a0de1629c6b\",\n  measurementId: \"G-67SR8EPTV1\"\n});\n\n\nconst db = firebase.firestore();\n\n\nexport default {\n  firebase, db\n}\n\n","import React, { Component } from 'react';\nimport firebase from '../firebase/index';\n\nclass ToDoPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n  }\n\n  deletePost = () => {\n\n  }\n\n  render() {\n    return (\n      <div className='todoPostStyle'>\n        <p>{this.props.title}</p>\n        <p>{this.props.task}</p>\n        <button onClick={this.deletePost}>Delete!</button>\n      </div>\n    )\n  }\n}\n\nexport default ToDoPost;\n","import React, { Component } from 'react';\nimport firebase from '../firebase/index';\nimport ToDoPost from './ToDoPosting';\nimport '../styles.css';\n\nclass ToDoBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allToDos: [],\n      title: '',\n      task: '',\n      id: 0\n    }\n  }\n\n  newTitleFunction = (event) => {\n    this.setState({\n      title: event.target.value\n    })\n  }\n\n  newTaskFunction = (event) => {\n    this.setState({\n      task: event.target.value\n    })\n  }\n\n  saveNewToDo = () => {\n    firebase.db.collection('todo').add({\n      title: this.state.title,\n      task: this.state.task,\n      id: this.state.id\n    }).then(ref => {\n      console.log('document refernce id', ref.id);\n      this.setState({\n        id: this.state.id + 1\n      })\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n  fetchToDos = () => {\n    const todoList = [];\n    firebase.db.collection('todo').get()\n      .then(query => {\n        query.forEach(doc => {\n          console.log(doc.data());\n          todoList.push(doc.data());\n        })\n      })\n      .then(() => {\n        this.setState({\n          allToDos: todoList\n        })\n      }).catch((e) => {\n        console.log(e);\n      })\n      \n  }\n\n\n\n  render() {\n    const allPosts = this.state.allToDos.map((todo) => {\n      return (\n        <ToDoPost\n          title={todo.title}\n          task={todo.task}\n        />\n      )\n    })\n\n    return (\n      <div>\n        <p>This is our To Do Board!</p>\n        <p>Add a New To Do:</p>\n\n        <p>Enter Title of To Do:</p>\n        <input type=\"text\" value={this.state.title} onChange={this.newTitleFunction} />\n\n        <p>Enter Task:</p>\n        <input type=\"text\" value={this.state.task} onChange={this.newTaskFunction} />\n\n        <button onClick={this.saveNewToDo}>Save!</button>\n\n        <div className='allToDos'>\n          <button onClick={this.fetchToDos}>Show my To Dos</button>\n          {allPosts}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ToDoBoard;\n","import logo from './logo.svg';\nimport DogBoard from './components/DogBoard';\nimport ToDoBoard from './components/ToDoBoard';\nimport './App.css';\nimport firebase from './firebase/index';\n\nfunction App() {\n  console.log(firebase);\n  console.log(firebase.db);\n  return (\n    <div className=\"App\">\n      {/* <DogBoard /> */}\n      <ToDoBoard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}